#!/usr/bin/env nextflow
nextflow.preview.dsl=2

params.outdir = "."
params.genome = ""
params.verbose = false

params.fastqc_args = ''
params.fastq_screen_args = ''
params.trim_galore_args = ''
params.hisat2_args = ''
params.multiqc_args = ''


if (params.verbose){
    println ("[WORKFLOW] FASTQC ARGS: "           + params.fastqc_args)
    println ("[WORKFLOW] FASTQ SCREEN ARGS ARE: " + params.fastq_screen_args)
    println ("[WORKFLOW] TRIM GALORE ARGS: "      + params.trim_galore_args)
    println ("[WORKFLOW] HISAT2 ARGS ARE: "       + params.hisat2_args)
    println ("[WORKFLOW] MULTIQC ARGS: "          + params.multiqc_args)
}

include './nf_modules/files.mod.nf'
include './nf_modules/genomes.mod.nf'
genome = getGenome(params.genome)

include './nf_modules/fastqc.mod.nf'
include  FASTQC as FASTQC2 from './nf_modules/fastqc.mod.nf'
include './nf_modules/fastq_screen.mod.nf'
include './nf_modules/trim_galore.mod.nf'
include './nf_modules/hisat2.mod.nf' params(genome: genome)

include './nf_modules/multiqc.mod.nf' 
file_ch = makeFilesChannel(args)

workflow {

    main:
        FASTQC         (file_ch, params.outdir, params.fastqc_args, params.verbose)
        FASTQ_SCREEN   (file_ch, params.outdir, params.fastq_screen_args, params.verbose)
        TRIM_GALORE    (file_ch, params.outdir, params.trim_galore_args, params.verbose)
        FASTQC2        (TRIM_GALORE.out.reads, params.outdir, params.fastqc_args, params.verbose)
        HISAT2         (TRIM_GALORE.out.reads, params.outdir, params.hisat2_args, params.verbose)

        // merging channels for MultiQC
        multiqc_ch = FASTQC.out.report.mix(
            TRIM_GALORE.out.report,
            FASTQ_SCREEN.out.report.ifEmpty([]),
            FASTQC2.out.report.ifEmpty([]),
            HISAT2.out.stats.ifEmpty([]),
        ).collect()

        // multiqc_ch.subscribe {  println "Got: $it"  }

        MULTIQC                          (multiqc_ch, params.outdir, params.multiqc_args, params.verbose)
}

