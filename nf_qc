#!/usr/bin/env nextflow
nextflow.enable.dsl=2

params.outdir = "."
params.genome = ""
params.verbose = false
params.single_end = false  // default mode is auto-detect. NOTE: params are handed over automatically  

params.fastqc_args = ''
params.fastq_screen_args = ''
params.multiqc_args = ''

if (params.verbose){
    println ("[WORKFLOW] FASTQC ARGS: "           + params.fastqc_args)
    println ("[WORKFLOW] FASTQ SCREEN ARGS ARE: " + params.fastq_screen_args)
    println ("[WORKFLOW] MULTIQC ARGS: "          + params.multiqc_args)
}

include { makeFilesChannel; getFileBaseNames }    from './nf_modules/files.mod.nf'
include { FASTQC }                                from './nf_modules/fastqc.mod.nf'
include { FASTQ_SCREEN }                          from './nf_modules/fastq_screen.mod.nf'
include { MULTIQC }                               from './nf_modules/multiqc.mod.nf' 

file_ch = makeFilesChannel(args)

workflow {

    main:
        FASTQC       (file_ch, params.outdir, params.fastqc_args, params.verbose)
        FASTQ_SCREEN (file_ch, params.outdir, params.fastq_screen_args, params.verbose)
        
        // merging channels for MultiQC
        multiqc_ch = FASTQC.out.report.mix(
            FASTQ_SCREEN.out.report.ifEmpty([]),
        ).collect()

        // multiqc_ch.subscribe {  println "Got: $it"  }
        MULTIQC                          (multiqc_ch, params.outdir, params.multiqc_args, params.verbose)

}